PRZYK≈ÅADOWE KOLOKWIUM

# Zad 1

def print_unique_values(list):
    unique_values = []
    for value in list:
        if value not in unique_values:
            unique_values.append(value)
            print(value)

list = [7,8,1,2,3,4,9]
print_unique_values(list)

# Zad 2

word = "Jade sobie rowerem przez miasto"
word = word.replace(" ", "")
word = ''.join(filter(str.isalpha, word))
reversed_word = word[::-1]
for i in range(3, len(word), 4):
    print(reversed_word[i])

# Zad 3

def fibonacci_recursive(n):
    if n == 0 or n == 1:
        return n
    else:
        return fibonacci_recursive(n-1) + fibonacci_recursive(n-2)

print(fibonacci_recursive(10))

def fibonacci(n):
    if n == 0 or n == 1:
        return n
    else:
        fib1, fib2 = 0, 1
        for i in range(2, n+1):
            fib = fib1 + fib2
            fib1, fib2 = fib2, fib
        return fib2

print(fibonacci(10))

# Zad 4

def potegi(*args, n):
    iloczyn = 1
    for liczba in args:
        iloczyn *= liczba ** n
    return iloczyn

wynik = potegi(1, 2, 3, 4, 5, n=2)
print(wynik)

fruits = ['apple', 'banana', 'pomergranate', 'plum', 'orange', 'melon', 'cherry', 'watermelon']

selected_fruits_lengths = [len(fruit) for fruit in fruits if 'u' in fruit or 'o' in fruit]

print(selected_fruits_lengths)

[5, 6, 9, 4, 6, 5, 10]
